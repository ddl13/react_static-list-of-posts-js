{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","postId","commentsFromServer","filter","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"m38IAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IACtC,OACD,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QChBIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,SCAGW,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOX,EAAyBU,EAAzBV,KAAMI,EAAmBM,EAAnBN,SAAUI,EAASE,EAATF,KAE/B,OACE,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEjC,4BACE,8BACG,eACAD,EAAKF,MAAQ,cAAC,EAAD,CAAUA,KAAMA,YAKpC,mBAAGP,UAAU,iBAAb,SAA+BD,IAE/B,uBAECI,EAASQ,OACR,cAAC,EAAD,CAAaR,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,iCCxBKS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,U,qBCY/B,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CN,UAbyBY,EAaGN,EAAKJ,GAX/BW,EAAmBC,QAAO,SAAArB,GAAO,OAAIA,EAAQmB,SAAWA,MAY1DR,MARyBW,EAQDT,EAAKS,OAPtBC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKF,KAAOa,MACzC,QAFT,IAA2BA,EANAH,KAiBdM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.66fffffa.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n        {' by '}\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, comments, user } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          <p>\n            {' Posted by  '}\n            {post.user && <UserInfo user={user} />}\n          </p>\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">{body}</p>\n\n      <hr />\n\n      {comments.length ? (\n        <CommentList comments={comments} />\n      ) : (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      )}\n    </div>\n  );\n};\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getCommentsOfPost(postId) {\n  return (\n    commentsFromServer.filter(comment => comment.postId === postId)\n  );\n}\n\nfunction getCommentsOfUser(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  comments: getCommentsOfPost(post.id),\n  user: getCommentsOfUser(post.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}